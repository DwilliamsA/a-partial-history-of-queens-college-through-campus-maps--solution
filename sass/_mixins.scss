///
/// Render an arrow sans shaft, defined by a width, height, direction, and color.
///
/// @access public
/// @param {Numeric} $width — Defines the width of the arrow, irrespective of
///                           direction.
/// @param {Numeric} $height — Defines the height of the arrow, also irrespective
///                            of direction
/// @param {String} $direction — Defines the direction the arrow points in. An arrow
///                              can point “down” or to the “bottom”, and it can
///                              point “up” or to the “top”.
/// @param {String} $color — Any valid W3C color defines the color of the arrow.
///
/// @example
/// div::before {
///
///    /* Render a black, 9×24, right-facing arrow */
///
///    @include render-shaftless-arrow(9px, 24px, "right", "black");
/// }
///
@mixin render-shaftless-arrow($width, $height, $direction, $color) {
   width: 0;
   height: 0;
   content: '';

   @if ('up' == $direction or 'top' == $direction) {
      border: {
         top:    $height solid transparent;
         right:  ($width / 2) solid transparent;
         bottom: $height solid transparent;
         left:   ($width / 2) solid transparent;
      }

      border-bottom-color: $color;
   } @else {
      @if ('down' == $direction or 'bottom' == $direction) {
         border: {
            top:    $height solid transparent;
            right:  ($width / 2) solid transparent;
            bottom: $height solid transparent;
            left:   ($width / 2) solid transparent;
         }

         border-top-color: $color;
      } @else {
         @if ('left' == $direction) {
            border: {
               top:    ($height / 2) solid transparent;
               right:  $width solid transparent;
               bottom: ($height / 2) solid transparent;
               left:   $width solid transparent;
            }

            border-right-color: $color;
         } @else {
            @if ('right' == $direction) {
               border: {
                  top:    ($height / 2) solid transparent;
                  right:  $width solid transparent;
                  bottom: ($height / 2) solid transparent;
                  left:   $width solid transparent;
               }

               border-left-color: $color;
            } @else {
               @error '`#{$direction}` is not a valid direction.';
            }
         }
      }
   }
}
